error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:11:7
   |
LL | const UNSAFE_CELL: UnsafeCell<u32> = UnsafeCell::new(0);
   |       ^^^^^^^^^^^
   |
   = help: did you mean to make this a `thread_local!` item
note: the lint level is defined here
  --> tests/ui/declare_interior_mutable_const.rs:1:9
   |
LL | #![deny(clippy::declare_interior_mutable_const)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:12:7
   |
LL | const REF_CELL: RefCell<u32> = RefCell::new(0);
   |       ^^^^^^^^
   |
   = help: did you mean to make this a `thread_local!` item

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:13:7
   |
LL | const CELL: Cell<u32> = Cell::new(0);
   |       ^^^^
   |
   = help: did you mean to make this a `thread_local!` item

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:21:7
   |
LL | const CELL_TUPLE: (bool, Cell<u32>) = (true, Cell::new(0));
   |       ^^^^^^^^^^
   |
   = help: did you mean to make this a `thread_local!` item

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:22:7
   |
LL | const CELL_ARRAY: [Cell<u32>; 2] = [Cell::new(0), Cell::new(0)];
   |       ^^^^^^^^^^
   |
   = help: did you mean to make this a `thread_local!` item

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:29:7
   |
LL | const CELL_STRUCT: CellStruct = CellStruct {
   |       ^^^^^^^^^^^
   |
   = help: did you mean to make this a `thread_local!` item

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:37:7
   |
LL | const CELL_ENUM: CellEnum = CellEnum::Cell(Cell::new(0));
   |       ^^^^^^^^^
   |
   = help: did you mean to make this a `thread_local!` item

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:40:7
   |
LL | const SOME_CELL: Option<Cell<u32>> = Some(Cell::new(0));
   |       ^^^^^^^^^
   |
   = help: did you mean to make this a `thread_local!` item

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:44:7
   |
LL | const SOME_NESTED_CELL: NestedCell = NestedCell([(Some(Cell::new(0)),)]);
   |       ^^^^^^^^^^^^^^^^
   |
   = help: did you mean to make this a `thread_local!` item

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:51:7
   |
LL | const UNION_CELL: UnionCell = UnionCell {
   |       ^^^^^^^^^^
   |
   = help: did you mean to make this a `thread_local!` item

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:55:7
   |
LL | const UNION_U32: UnionCell = UnionCell { x: 0 };
   |       ^^^^^^^^^
   |
   = help: did you mean to make this a `thread_local!` item

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:60:11
   |
LL |     const CELL: Cell<u32> = Cell::new(0);
   |           ^^^^

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:65:11
   |
LL |     const SELF: Self = Self(Cell::new(0));
   |           ^^^^

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:67:11
   |
LL |     const SOME_SELF: Option<Self> = Some(Self(Cell::new(0)));
   |           ^^^^^^^^^

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:83:11
   |
LL |     const DEFAULT: Self = Some(Cell::new(T::DEFAULT));
   |           ^^^^^^^

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:91:11
   |
LL |     const DEFAULT: Self = Self::Cell(Cell::new(T::DEFAULT));
   |           ^^^^^^^

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:94:11
   |
LL |     const CELL: Self = Self::DEFAULT;
   |           ^^^^

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:95:11
   |
LL |     const CELL_BY_DEFAULT: Self = Self::Cell(Cell::DEFAULT);
   |           ^^^^^^^^^^^^^^^

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:107:11
   |
LL |     const GENERIC_CELL: Self = Self::GenericEnumCell(GenericEnumCell::<T>::CELL);
   |           ^^^^^^^^^^^^

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:109:11
   |
LL |     const ENUM_CELL: Self = Self::EnumCell(GenericEnumCell::<u32>::CELL);
   |           ^^^^^^^^^

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:114:11
   |
LL |     const CELL: Cell<Self>;
   |           ^^^^

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:118:11
   |
LL |     const SOME_CELL: Option<Cell<Self>> = Some(Cell::new(Self::DEFAULT));
   |           ^^^^^^^^^

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:127:11
   |
LL |     const CELL: Cell<Self::T>;
   |           ^^^^

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:131:11
   |
LL |     const SOME_CELL: Option<Cell<Self::T>> = Some(Cell::new(Self::DEFAULT));
   |           ^^^^^^^^^

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:151:11
   |
LL |     const VALUE: Self::T = Cell::new(0);
   |           ^^^^^

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:162:11
   |
LL |     const VALUE: <Self::T as WithAssoc>::T = Cell::new(0);
   |           ^^^^^

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:172:11
   |
LL |     const VALUE: Self::T<u32> = Cell::new(0);
   |           ^^^^^

error: named constant with interior mutability
  --> tests/ui/declare_interior_mutable_const.rs:187:11
   |
LL |     const VALUE: Self::T<Cell<u32>> = Some(Cell::new(0));
   |           ^^^^^

error: aborting due to 28 previous errors

